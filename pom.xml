<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ir.co.sadad.eb</groupId>
    <artifactId>baam-way-payment</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <!--<parent>-->
    <!--<groupId>net.wasdev.wlp.maven.parent</groupId>-->
    <!--<artifactId>liberty-maven-app-parent</artifactId>-->
    <!--<version>2.0</version>-->
    <!--</parent>-->
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>18</version>
    </parent>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!--tag::linux-user[]-->
        <linux.user.name>amir</linux.user.name>
        <!--end::linux-user[]-->
        <!-- tag::appdetails[] -->
        <app.name>baam-way-payment</app.name>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <!-- end::appdetails[] -->
        <war.context>${app.name}</war.context>
        <package.file>${project.build.directory}/${app.name}.zip</package.file>
        <packaging.type>usr</packaging.type>
        <appaddress>${project.build.directory}/baam-way-payment-1.0-SNAPSHOT.war</appaddress>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <!-- Zipkin user feature download link -->
        <zipkin.usr.feature>
            https://github.com/WASdev/sample.opentracing.zipkintracer/releases/download/1.1/liberty-opentracing-zipkintracer-1.1-sample.zip
        </zipkin.usr.feature>
        <!-- tag::versions[] -->
        <version.microprofile>2.1</version.microprofile>
        <version.slf4j>1.7.25</version.slf4j>
        <version.logback>1.2.3</version.logback>
        <version.javaee>8.0</version.javaee>
        <!-- delta spike -->
        <version.deltaspike>1.8.2</version.deltaspike>
        <!-- Lombok -->
        <version.lombok>1.18.4</version.lombok>
        <version.dropwizard>4.0.5</version.dropwizard>
        <version.dockerfile-maven-plugin>1.4.3</version.dockerfile-maven-plugin>
        <!-- Arquillian -->
        <version.arquillian>1.1.13.Final</version.arquillian>
        <!-- MapStruct -->
        <version.org.mapstruct>1.2.0.Final</version.org.mapstruct>
        <version.log4j>2.11.1</version.log4j>
        <!-- end::versions[] -->
    </properties>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <wlp.dir></wlp.dir>
                <!--<external-lib-directory>D:/externallib/</external-lib-directory>-->
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--<external-lib-directory>/home/amir/Documents/externallib</external-lib-directory>-->
                <wlp.dir>/home/${linux.user.name}/Documents/java/appserver/openliberty-18.0.0.4/wlp</wlp.dir>
                <wlp.conf.dir>najmi</wlp.conf.dir>
            </properties>
        </profile>

        <!-- tag::profile-docker-image[] -->
        <!--<profile>-->
        <!--<id>docker-image</id>-->
        <!--<build>-->
        <!--<plugins>-->
        <!--<plugin>-->
        <!--<groupId>com.spotify</groupId>-->
        <!--<artifactId>dockerfile-maven-plugin</artifactId>-->
        <!--<version>${version.dockerfile-maven-plugin}</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<id>build-docker-image</id>-->
        <!--<goals>-->
        <!--<goal>build</goal>-->
        <!--</goals>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--<configuration>-->
        <!--<repository>openliberty-${project.artifactId}</repository>-->
        <!--<tag>${project.version}</tag>-->
        <!--</configuration>-->
        <!--</plugin>-->
        <!--</plugins>-->
        <!--</build>-->
        <!--<properties>-->
        <!--<external-lib-directory>D:/externallib/</external-lib-directory>-->
        <!--</properties>-->
        <!--</profile>-->
        <!-- end::profile-docker-image[] -->

    </profiles>


    <dependencies>
        <!-- Microprofile -->
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <type>pom</type>
            <scope>provided</scope>
            <version>${version.microprofile}</version>
        </dependency>

        <!-- tag::log4j[]-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>${version.log4j}</version>
        </dependency>
        <!-- end::log4j[]-->
        <!-- tag::hazelcast[] -->
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>3.7.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-client</artifactId>
            <version>3.7.2</version>
            <scope>compile</scope>
        </dependency>
        <!-- end::hazelcast[] -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${version.logback}</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>${version.javaee}</version>
            <scope>provided</scope>
        </dependency>

        <!-- tag::Hibernate[] -->
        <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>5.4.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.4.1.Final</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.hibernate</groupId>-->
        <!--<artifactId>hibernate-ehcache</artifactId>-->
        <!--<version>5.4.0.Final</version>-->
        <!--</dependency>-->
        <!-- tag::Hibernate[] -->
        <!-- tag::Deltaspike[] -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- data & jpa -->
        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jpa-module-impl</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-data-module-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-data-module-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- data & jpa -->
        <!-- end::Deltaspike[] -->

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Joda time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- IBM ICU -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>63.1</version>
        </dependency>

        <!-- tag::test[] -->
        <dependency>
            <groupId>io.openliberty.arquillian</groupId>
            <artifactId>arquillian-liberty-managed-junit</artifactId>
            <version>1.1.3</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.jboss.arquillian.junit</groupId>-->
        <!--<artifactId>arquillian-junit-container</artifactId>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.jboss.arquillian.testng</groupId>-->
        <!--<artifactId>arquillian-testng-container</artifactId>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.testng</groupId>-->
        <!--<artifactId>testng</artifactId>-->
        <!--<version>6.9.10</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>io.openliberty.arquillian</groupId>-->
        <!--<artifactId>arquillian-liberty-managed-junit</artifactId>-->
        <!--<version>1.0</version>-->
        <!--<type>pom</type>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <!-- end::test[] -->

        <!-- tag::dropwizard[] -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${version.dropwizard}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
            <version>${version.dropwizard}</version>
        </dependency>
        <!-- end::dropwizard[] -->
        <!--tag::mapstruct[]-->
        <!-- scope provided because the processor is only needed at compile time-->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${version.org.mapstruct}</version>
        </dependency>

        <!--end::mapstruct[]-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>3.17.4</version>
        </dependency>
        <!--******************************  BMI REQUIREMENT  ********************************** -->
        <!-- bmi audit -->
        <dependency>
            <groupId>ir.bmi.audit</groupId>
            <artifactId>audit-client</artifactId>
            <version>2.0.2</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- bmi security -->
        <dependency>
            <groupId>ir.bmi.identity</groupId>
            <artifactId>client-security-api</artifactId>
            <version>3.4.6</version>
        </dependency>
        <!-- bmi logging -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
            <scope>compile</scope>
        </dependency>

        <!--******************************  BMI REQUIREMENT  ********************************** -->
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${version.arquillian}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-container-test-api</artifactId>
                <version>${version.arquillian}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.distribution</groupId>
                <artifactId>distributions-bom</artifactId>
                <version>${version.deltaspike}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.openliberty.features</groupId>
                <artifactId>features-bom</artifactId>
                <version>RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- tag::compilerPlugin[]-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source> <!-- or higher, depending on your project -->
                    <target>1.8</target> <!-- or higher, depending on your project -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${version.org.mapstruct}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- end::compilerPlugin[]-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-dependency-plugin</artifactId>-->
            <!--<version>3.1.0</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<phase>validate</phase>-->
            <!--<goals>-->
            <!--<goal>copy</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<outputDirectory>${endorsed.dir}</outputDirectory>-->
            <!--<silent>true</silent>-->
            <!--<artifactItems>-->
            <!--<artifactItem>-->
            <!--<groupId>javax</groupId>-->
            <!--<artifactId>javaee-endorsed-api</artifactId>-->
            <!--<version>7.0</version>-->
            <!--<type>jar</type>-->
            <!--</artifactItem>-->
            <!--</artifactItems>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>

            <!-- Enable liberty-maven plugin -->
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>2.6.1</version>
                <extensions>true</extensions>
                <configuration>
                    <outputDirectory>target</outputDirectory>
                    <!--<assemblyArtifact>-->
                    <!--<groupId>io.openliberty</groupId>-->
                    <!--<artifactId>openliberty-runtime</artifactId>-->
                    <!--<version>RELEASE</version>-->
                    <!--<type>zip</type>-->
                    <!--</assemblyArtifact>-->
                    <installDirectory>${wlp.dir}</installDirectory>
                    <configFile>src/main/liberty/config/${wlp.conf.dir}</configFile>
                    <packageFile>${package.file}</packageFile>
                    <serverName>baam-way</serverName>
                    <include>${packaging.type}</include>
                    <!-- tag::bootstrap[] -->
                    <bootstrapProperties>
                        <default.http.port>${testServerHttpPort}</default.http.port>
                        <default.https.port>${testServerHttpsPort}</default.https.port>
                        <app.context.root>${war.context}</app.context.root>
                    </bootstrapProperties>
                    <!-- end::bootstrap[] -->
                </configuration>
                <executions>
                    <execution>
                        <id>install-liberty</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-app</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install-apps</goal>
                        </goals>
                        <configuration>
                            <looseApplication>true</looseApplication>
                            <stripVersion>true</stripVersion>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>test-start-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>test-stop-server</goal>
                        </goals>
                    </execution>
                    <!--<execution>-->
                    <!--<id>package-app</id>-->
                    <!--<phase>package</phase>-->
                    <!--<goals>-->
                    <!--<goal>package-server</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->
                    <!--<outputDirectory>target/wlp-package</outputDirectory>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/resources/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                        </configuration>
                        <id>filter-resource</id>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
                <version>3.1.0</version>
            </plugin>
        </plugins>
    </build>

</project>